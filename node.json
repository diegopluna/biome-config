{
  "$schema": "https://biomejs.dev/schemas/1.8.3/schema.json",
  "linter": {
    "enabled": true,
    "rules": {
      "style": {
        "noVar": "warn",
        "useFilenamingConvention": "warn",
        "useBlockStatements": "error",
        "noCommaOperator":"error",
        "useSingleVarDeclarator":"error",
        "useConst":"error",
        "useConsistentArrayType":"error",
        "useExportType":"error",
        "useImportType":"error",
        "useDefaultParameterLast":"error",
        "useNamingConvention":"error",
        "noInferrableTypes":"error",
        "noNamespace":"error",
        "noNonNullAssertion":"error",
        "noParameterProperties":"error",
        "useAsConstAssertion":"error",
        "useEnumInitializers":"error",
        "useForOf":"error",
        "useShorthandFunctionType":"error",
        "useLiteralEnumMembers":"error"
      },
      "correctness": {
        "noInvalidConstructorSuper": "error",
        "useArrayLiterals": "error",
        "noSwitchDeclarations":"error",
        "noConstAssign":"error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern":"error",
        "noPrecisionLoss":"error",
        "noNewSymbol":"error",
        "noGlobalObjectCalls":"error",
        "noSelfAssign":"error",
        "noUnreachableSuper":"error",
        "noUndeclaredVariables":"error",
        "noUnreachable":"error",
        "noUnsafeFinally":"error",
        "noUnusedVariables": "error",
        "noInvalidUseBeforeDeclaration":"error",
        "useIsNan":"error"
      },
      "complexity": {
        "useLiteralKeys": "error",
        "noExtraBooleanCast": "error",
        "noUselessLoneBlockStatements": "error",
        "noUselessCatch": "error",
        "noMultipleSpacesInRegularExpressionLiterals":"error",
        "noUselessTernary":"error",
        "noUselessConstructor":"error",
        "noUselessRename":"error",
        "noVoid":"error",
        "noWith":"error",
        "useRegexLiterals":"error",
        "noBannedTypes":"error",
        "noStaticOnlyClass":"error",
        "noUselessThisAlias":"error",
        "noUselessTypeConstraint":"error",
        "useOptionalChain":"error"
      },
      "nursery": {
        "useConsistentBuiltinInstantiation":"error",
        "useThrowOnlyError":"error",
        "noUselessUndefinedInitialization":"error",
        "noYodaExpression":"error",
        "useAdjacentOverloadSignatures":"error",
        "noRestrictedImports":"error"
      },
      "security": {
        "noGlobalEval":"error"
      },
      "suspicious": {
        "useDefaultSwitchClauseLast": "error",
        "noDoubleEquals": "error",
        "noAsyncPromiseExecutor": "error",
        "noClassAssign":"error",
        "noCompareNegZero":"error",
        "noAssignInExpressions":"error",
        "noControlCharactersInRegex":"error",
        "noDebugger":"error",
        "noDuplicateParameters":"error",
        "noDuplicateClassMembers":"error",
        "noDuplicateObjectKeys":"error",
        "noDuplicateCase":"error",
        "noEmptyBlockStatements":"error",
        "noCatchAssign":"error",
        "noFallthroughSwitchClause":"error",
        "noFunctionAssign":"error",
        "noGlobalAssign":"error",
        "noImportAssign":"error",
        "noConfusingLabels":"error",
        "noMisleadingCharacterClass":"error",
        "noPrototypeBuiltins":"error",
        "noRedeclare":"error",
        "noSelfCompare":"error",
        "noShadowRestrictedNames":"error",
        "noSparseArray":"error",
        "noUnsafeNegation":"error",
        "useValidTypeof":"error",
        "noEmptyInterface":"error",
        "noExplicitAny":"error",
        "noExtraNonNullAssertion":"error",
        "noConfusingVoidType":"error",
        "noMisleadingInstantiator":"error",
        "noUnsafeDeclarationMerging":"error",
        "useNamespaceKeyword":"error",
        "useAwait":"error"
      }

    }
  },
  "formatter": {
    "enabled": true,
    "lineWidth": 80,
    "indentSize": 2,
    "indentWidth": 2,
    "indentStyle":"tab"
  },
  "javascript": {
    "formatter": {
      "quoteStyle":"single",
      "arrowParentheses":"always",
      "semicolons":"asNeeded"
    }
  }
}